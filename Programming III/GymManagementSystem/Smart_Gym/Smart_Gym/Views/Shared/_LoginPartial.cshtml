@using Microsoft.AspNetCore.Identity

@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @* Carga el usuario logueado para que despues de pueda acceder a sus propiedades y mtrar su nombre con el apellido *@
        var usuario = await UserManager.GetUserAsync(User);

        <li class="nav-item">
            <a id="manage" class="nav-link text-dark mx-2" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hola, @usuario?.Nombre @usuario?.Apellido</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class=" btn btn-outline-danger me-5" style="border-radius:14px">Cerrar sesión</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Registro</a>
        </li>
        <li class="nav-item">
            <a class="btn btn-outline-primary mx-2" style="border-radius: 14px" id="login" asp-area="Identity" asp-page="/Account/Login">Inicio de sesión </a>
        </li>
    }
</ul>
