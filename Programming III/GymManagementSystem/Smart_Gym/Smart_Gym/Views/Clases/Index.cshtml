@using Microsoft.AspNetCore.Identity
@model IEnumerable<Smart_Gym.Models.Clase>
@inject SignInManager<Usuario> SignInManager

@{
    ViewData["Title"] = "Index";
    var rolesPermitidos = new[] { "Administrador", "Entrenador" }; //Crea un arreglo con los roles permitidos para editar y eliminar rutinas.
    var tieneRol = rolesPermitidos.Any(rol => User.IsInRole(rol)); //Verifica si el usuario tiene alguno de los roles permitidos.
}

<div>
    <img src="https://t4.ftcdn.net/jpg/03/97/90/37/240_F_397903721_U3um3kpxmUF5whRFCh4AqQ6uDQnct7KE.jpg"
         alt="Smart Gym Banner"
         class="img-fluid w-100"
         style="max-height: 400px; border-radius: 14px;" />
</div>
<div class="d-flex align-items-center justify-content-between mt-5 mb-3 ">

    <h1 style="font-size:25px;">Información de clases</h1>
    @if (SignInManager.IsSignedIn(User)) //Esta opción solo se muestra si el usuario está logueado y tiene el rol de Administrador o Entrenador
    {
        if (tieneRol)
        {
            <a asp-action="Create"
            class="btn btn-primary" style="border-radius:14px;">
                <i class="bi bi-plus-circle me-2"></i>Agregar clase
            </a>
        }

    }

</div>
<table class="table">
    <thead>
        <tr>
            <th class="col-2">
                @Html.DisplayNameFor(model => model.Tipo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nombre)
            </th class="col-3">
            <th>
               Ubicación
            </th class="col-2">
            <th>
              Fecha y hora
            </th>           
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gimnasio.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FechaHora)
            </td>
           
            <td class="text-end align-middle">
                 @if (SignInManager.IsSignedIn(User)) //Esta opción solo se muestra si el usuario está logueado y tiene el rol de Administrador o Entrenador
                    {
                        if (tieneRol)
                        {
                            
                            <a asp-action="Edit" asp-route-id="@item.IdClase" 
                            class="btn btn-secondary me-2" style="border-radius:14px;">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a asp-action="Delete" asp-route-id="@item.IdClase" 
                            class="btn btn-danger me-2"style="border-radius:14px;">
                                <i class="bi bi-trash"></i>
                            </a>

                        }                        
                    }
                    <a asp-action="Details" asp-route-id="@item.IdClase" 
                    class="btn btn-info"style="border-radius:14px;">
                        <i class="bi bi-info-circle text-white"></i>
                    </a>
            </td>
        </tr>
}
    </tbody>
</table>
