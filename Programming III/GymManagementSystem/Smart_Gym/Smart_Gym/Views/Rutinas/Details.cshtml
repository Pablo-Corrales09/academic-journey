@model Smart_Gym.Models.Rutina
@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager



@{
    
    ViewData["Title"] = "Details";
    var rolesPermitidos = new[] { "Administrador", "Entrenador" }; //Crea un arreglo con los roles permitidos para editar y eliminar rutinas.
    var tieneRol = rolesPermitidos.Any(rol => User.IsInRole(rol)); //Verifica si el usuario tiene alguno de los roles permitidos.
}

<div class=" container my-5">
    <h1 class=" my-4 " style="font-size:25px">Información de la rutina</h1>
    <div>

        @* Este div es el que organiza el encabezado a la izquierda *@
        <div class="d-flex justify-content-between align-items-center">

            <h2 class="m-0 my-3" style="font-size:20px">Descripción</h2>
            <div class="d-flex align-items-center gap-3">
            @if (SignInManager.IsSignedIn(User)) //Valida si el usuario está logueado para mostrar los botones de editar y eliminar.
            {
                    if (tieneRol) //Verifica si el usuario tiene alguno de los roles permitidos para editar y eliminar rutinas.
                    {
                    <a asp-controller="Rutinas" asp-action="Edit" asp-route-id="@Model?.IdRutina" class="btn btn-outline-secondary" style="border-radius: 14px">Editar descripción</a>
                    <a asp-controller="Rutinas" asp-action="Delete" asp-route-id="@Model?.IdRutina" class="btn btn-outline-danger" style="border-radius: 14px">Eliminar rutina</a>
                    }               
            }

                <a class="btn btn-secondary me-4" style="border-radius: 14px" asp-action="Index">
                    <i class="bi bi-arrow-left-circle me-2"></i>Volver
                </a> @* i class permite utilizar íconos de la librería de bootstrap *@
            </div>

        </div>
        <hr />
        <dl class="row mt-3">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.NombreRutina)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.NombreRutina)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Nivel)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Nivel)
            </dd>
            <dt class="col-sm-2">
                Descripción de la rutina
            </dt>
            <dd class="col-sm-10">
                <div class="col-10" style="text-align: justify;">
                    @Html.DisplayFor(model => model.DescripcionRutina)
                </div>                
            </dd>
        </dl>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        @* justify-content-between permite separar los elementos 1 a la izq y el otro a la derecha. *@
        <h3 class="m-0 my-4" style="font-size:20px">Ejercicios de la rutina</h3>
    </div>
    <table class="table align-middle">
        @*  table align-middle centra todos los elementos de la tabla verticalmente *@
        <thead>
            <tr>
                <th>
                    Nombre ejercicio
                </th>
                <th class="text-center">
                    N° de series
                </th>
                <th class="text-center">
                    Repeticiones
                </th>
                <th class="text-center">
                    Imagen ejercicio
                </th>
                <th class="text-center">
                    Máquina
                </th>
                <th class="text-center">
                    Número Máquina
                </th>
                @if (SignInManager.IsSignedIn(User)) //Esta opción solo se muestra si el usuario está logueado
                {
                        if (tieneRol) 
                        {
                            <th class="text-center">
                                <a asp-controller="EjercicioRutinas" asp-action="Create"
                                class="btn btn-primary" style="border-radius: 14px">
                                    <i class="bi bi-plus-circle me-2"></i>Agregar ejercicio
                                </a>
                            </th>
                        }                   
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.EjerciciosRutina)
            {
                <tr>
                    <td class="py-5">
                        @Html.DisplayFor(modelItem => item.Ejercicio.NombreEjercicio)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Series)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Repeticiones)
                    </td>
                    <td class="text-center">
                        <img src="@Html.DisplayFor(modelItem => item.Ejercicio.ImagenEjercicio)" style="max-width: 100px; max-height: 100px;" />
                    </td>
                    <td class="text-center">
                        <a asp-controller="Maquinas" asp-action="Details"
                           asp-route-id="@item.Ejercicio.Maquina.IdMaquina" asp-route-regresar="Rutinas"
                           asp-route-idRutina="@item.Rutina.IdRutina">
                            @Html.DisplayFor(modelItem => item.Ejercicio.Maquina.NombreMaquina)

                        </a>

                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => item.Ejercicio.Maquina.IdMaquina)
                    </td>


                    @if (SignInManager.IsSignedIn(User)) //Valida si el usuario está logueado par amostrar el botón de agregar ejericio.
                    {
                            if (tieneRol)
                            {
                                <td>
                                    <div class="d-flex justify-content-center align-items-center gap-3">
                                        @*  asp-route-id permite relacionar el ID con la ruta de busqueda que se debe colocar para encontrar el ejercicio que debe editarse. *@
                                        <a asp-controller="EjercicioRutinas" asp-action="Edit" asp-route-id="@item.IdEjercicioRutina"
                                           class="btn btn-secondary" style="border-radius: 14px">
                                           <i class="bi bi-pencil-square"></i></a>
                                        @* elimina el ejercicio de la rutina y a su vez envía el ID de la rutina por la vista al controlador *@
                                        <a asp-controller="EjercicioRutinas" asp-action="Delete"
                                           asp-route-id="@item.IdEjercicioRutina"
                                           asp-route-idRutina="@item.Rutina.IdRutina"
                                           class="btn btn-danger" style="border-radius: 14px">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>

                            }

                    }
                </tr>
            }
        </tbody>
    </table>


</div>