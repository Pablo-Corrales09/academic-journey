@using Microsoft.AspNetCore.Identity
@model IEnumerable<Smart_Gym.Models.Maquina>
@inject SignInManager<Usuario> SignInManager

@{
    ViewData["Title"] = "Index";
    var rolesPermitidos = new[] { "Administrador", "Entrenador" }; //Crea un arreglo con los roles permitidos para editar y eliminar rutinas.
    var tieneRol = rolesPermitidos.Any(rol => User.IsInRole(rol)); //Verifica si el usuario tiene alguno de los roles permitidos.
}

<div>
    <img src="https://t3.ftcdn.net/jpg/11/25/49/40/240_F_1125494050_uBzRY8j7fJltisM8F7H8wcztmdY4FJPK.jpg"
         alt="Smart Gym Banner"
         class="img-fluid w-100"
         style="max-height: 400px; border-radius: 14px;" />
</div>
<div class="d-flex justify-content-between align-items-center my-3">
<h1 class="my-4" style="font-size:25px;">Equipos de entrenamiento</h1> 

    @if (SignInManager.IsSignedIn(User)) //Valida si el usuario está logueado para mostrar el botón de agregar.
    {
        if (tieneRol) { 
        <a asp-action="Create" class="btn btn-primary float-end" 
        style="border-Radius:14px">
        <i class="bi bi-plus-circle me-2"></i>Agregar máquina
        </a>
        }
    }
</div>
<table class="table align-middle">
    <thead>
        <tr>
            <th class="text-center">
                N° Máquina
            </th >
            <th class="col-2 text-center">
                Nombre
            </th>
            <th class="col-4 text-center">
                Descripción
            </th> 
            <th class="text-center">
                Imagen
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.IdMaquina)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.NombreMaquina)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.DescripcionMaquina)
                </td>
                <td class="text-center">
                    <img src="@Html.DisplayFor(modelItem => item.ImagenMaquina)" style="max-width: 100px; max-height: 100px;" />

                </td>
                <td class="col-2">
                    @if (SignInManager.IsSignedIn(User)) //Valida si el usuario está logueado para mostrar los botones de editar y eliminar.
                    {
                        if (tieneRol) { 
                        <a asp-action="Edit" asp-route-id="@item.IdMaquina"
                        class="btn btn-secondary" style="border-radius:14px;">
                            <i class="bi bi-pencil-square"></i>
                        </a>
                        <a asp-action="Delete" asp-route-id="@item.IdMaquina"
                            class="btn btn-danger mx-2" style="border-radius:14px;">
                            <i class="bi bi-trash"></i>
                            </a>
                        }
                       }
                    <a asp-action="Details" asp-route-id="@item.IdMaquina"
                       class="btn btn-info text-white" style="border-radius:14px;">
                       <i class="bi bi-info-circle"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>
