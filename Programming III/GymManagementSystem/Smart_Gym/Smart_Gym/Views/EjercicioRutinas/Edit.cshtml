@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuario> SignInManager
@model Smart_Gym.Models.EjercicioRutina

@{
    ViewData["Title"] = "Edit";
  var rolesPermitidos = new[] { "Administrador", "Entrenador" }; //Crea un arreglo con los roles permitidos para editar y eliminar rutinas.
    var tieneRol = rolesPermitidos.Any(rol => User.IsInRole(rol)); //Verifica si el usuario tiene alguno de los roles permitidos.
}
@if (SignInManager.IsSignedIn(User)) //Esta función contola la vista, si el usuario está logueado.
{
    if (tieneRol)
    {
<div class="d-flex justify-content-center align-items-center" style="height: 80vh;">
<div class="row border border-secondary p-3 w-40" style="border-radius:14px;">

<h1 class="mt-3 text-center" style="font-size: 25px;">Editar rutina de ejercicios</h1>

<h2 class="mt-1" style="font-size: 20px;">Información</h2>
<hr />

            <div class="col-md-12">
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="IdEjercicioRutina" />

                    <div class="form-group">
                        <label asp-for="IdRutina" class="control-label my-2">Nombre</label>
                        <select asp-for="IdRutina" class="form-control" asp-items="ViewBag.IdRutina"></select>
                        <span asp-validation-for="IdRutina" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                            <label asp-for="IdEjercicio" class="control-label my-2">Descripción</label>
                        <select asp-for="IdEjercicio" class="form-control" asp-items="ViewBag.IdEjercicio"></select>
                        <span asp-validation-for="IdEjercicio" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                            <label asp-for="Series" class="control-label my-2"></label>
                         <input asp-for="Series" class="form-control" />
                         <span asp-validation-for="Series" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                            <label asp-for="Repeticiones" class="control-label my-2"></label>
                        <input asp-for="Repeticiones" class="form-control" />
                        <span asp-validation-for="Repeticiones" class="text-danger"></span>
                   
                    </div>
                    
                    
                    


                    <div class="d-flex my-3 justify-content-between align-items-center">
                        <div class="form-group">
                            <input type="submit" value="Guardar cambios" class="btn btn-primary" style="border-radius: 14px;" />
                        </div>
                        <div>
                            <a class="btn btn-outline-secondary float-end" style="border-radius: 14px;" 
                            asp-controller="Rutinas" asp-action="Details" asp-route-id="@Model?.IdRutina">
                            <i class="bi bi-arrow-left-circle me-2"></i>Volver
                            </a>
                        </div>
                    </div>

                </form>
            </div>

    </div>
</div>


    }
    else
    {
        <div class="d-flex flex-column justify-content-center align-items-center vh-100">
            <div class="d-flex align-items-center mb-3">
                <i class="bi bi-emoji-frown-fill fs-1 mx-2"></i>
                <h1 class="m-0">Acceso denegado</h1>
            </div>

            <a class="btn btn-secondary text-white" style="border-radius: 14px;" asp-controller="Home" asp-action="Index">
                <i class="bi bi-arrow-left-circle mx-2"></i> Volver
            </a>
        </div>


    }
}


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
